{"version":3,"sources":["services/data-service.js","services/points-service.js","components/Table.jsx","components/TableHeader.jsx","components/CustomerTableBody.jsx","components/TransactionsTableBody.jsx","components/ItemsTableBody.jsx","components/SelectedCutomerDetails.jsx","App.js","reportWebVitals.js","index.js"],"names":["getCustomerTransaction","Promise","resolve","reject","fetch","headers","then","response","json","data","customerRewards","catch","error","calculateRewardsPoints","transactions","totalPoints","forEach","transaction","forOverOneHundred","forOverFifty","cleanTotal","Math","floor","total","points","Table","children","className","TableHeader","headerElements","map","headerElement","scope","title","CustomerTableBody","bodyData","onCustomerClick","onClick","e","customerId","firstName","lastName","email","TransactionsTableBody","onShowDetails","transactionId","transactionDate","href","ItemsTableBody","dataBody","itemId","description","quantityPurchased","price","SelectedCustomerDetails","selectedCustomer","phone","App","state","customers","filteredTransactions","transactionItems","customerHeaderElements","transactionsHeaderElements","itemsHeaderElements","componentDidMount","setState","err","console","log","handleClickOnCustomer","preventDefault","find","customer","filter","TransactionsWithPoints","handleShowDetails","filteredTransaction","items","this","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d30afae.chunk.js","sourcesContent":["\r\nexport const getCustomerTransaction = () => {\r\n    return new Promise((resolve, reject) => {\r\n        fetch('https://jmerlosrepo.github.io/customer-rewards/data/customer-rewards.json',{\r\n        headers : { \r\n          'Content-Type': 'application/json',\r\n          'Accept': 'application/json'\r\n         }\r\n      })\r\n    .then(response => response.json())\r\n    .then(data => resolve(data.customerRewards))\r\n    .catch(error => reject(error));\r\n    });\r\n    \r\n}","export const calculateRewardsPoints = (transactions) => {\r\n    transactions.totalPoints = 0;\r\n    transactions.forEach(transaction => {\r\n        let forOverOneHundred = 0;\r\n        let forOverFifty = 0;\r\n        let cleanTotal = Math.floor(transaction.total);\r\n\r\n        if( transaction.total > 100){\r\n            forOverOneHundred = (cleanTotal - 100) * 2;\r\n        }\r\n\r\n        if( transaction.total > 50){\r\n            forOverFifty = (cleanTotal - 50);\r\n        }\r\n\r\n        transaction.points = forOverOneHundred + forOverFifty;\r\n        transactions.totalPoints = transactions.totalPoints + (forOverOneHundred + forOverFifty);\r\n    });\r\n\r\n    return transactions;\r\n}\r\n","import React from 'react';\r\n\r\nconst Table = ({children}) => {\r\n    return (\r\n        <table className=\"table table-striped\">\r\n            {children}\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Table;","import React from 'react';\r\n\r\nconst TableHeader = ({headerElements}) => {\r\n    return (\r\n        <thead className=\"thead-dark\">\r\n            <tr>\r\n                {headerElements.map( headerElement => (\r\n                    <th key={ headerElement.title } scope=\"col\">{ headerElement.title }</th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nexport default TableHeader;","import React from 'react';\r\n\r\nconst CustomerTableBody = ({bodyData, onCustomerClick}) => {\r\n    return (\r\n        <tbody>\r\n            {bodyData.map(data =>(\r\n              <tr key={data.customerId} className=\"clickable\" onClick={(e) => onCustomerClick(e, data.customerId)}>\r\n                <td>{data.firstName}</td>\r\n                <td>{data.lastName}</td>\r\n                <td>{data.email}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default CustomerTableBody;","import React from 'react';\r\n\r\nconst TransactionsTableBody = ({bodyData, onShowDetails}) => {    \r\n    return (\r\n        <tbody>\r\n            {bodyData.map(data =>(\r\n                <tr key={data.transactionId}>\r\n                <td>{data.transactionId}</td>\r\n                <td>{data.transactionDate}</td>\r\n                <td>${data.total}</td>\r\n                <td>{data.points}</td>\r\n                <td><a onClick={(e) => onShowDetails(e, data.transactionId)} href=\"\">Show details</a></td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n    \r\n}\r\n\r\nexport default TransactionsTableBody","import React from 'react';\r\n\r\nconst ItemsTableBody = ({dataBody}) => {\r\n    return (\r\n        <tbody>\r\n            {dataBody.map(data => (\r\n                <tr key={data.itemId}>\r\n                    <td>{data.itemId}</td>\r\n                    <td>{data.description}</td>\r\n                    <td>{data.quantityPurchased}</td>\r\n                    <td>${data.price}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default ItemsTableBody;","import React from 'react';\r\n\r\nconst SelectedCustomerDetails = ({selectedCustomer}) => {\r\n    return (\r\n        <div className=\"detailsData\">\r\n              <div className=\"dataColumn\">\r\n                <div className=\"label\">First Name:</div>\r\n                <div className=\"data\">{selectedCustomer.firstName}</div>\r\n                <div className=\"label\">Last Name:</div>\r\n                <div className=\"data\">{selectedCustomer.lastName}</div>\r\n              </div>\r\n              <div className=\"dataColumn\">\r\n                <div className=\"label\">Email:</div>\r\n                <div className=\"data\">{selectedCustomer.email}</div>\r\n                <div className=\"label\">Phone:</div>\r\n                <div className=\"data\">{selectedCustomer.phone}</div>\r\n              </div>\r\n              <div className=\"dataColumn\">\r\n                <div className=\"label\">Total Points: </div>\r\n                <div className=\"data\">{selectedCustomer.totalPoints}</div>\r\n              </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default SelectedCustomerDetails;","import React, { Component } from 'react';\nimport { getCustomerTransaction } from './services/data-service';\nimport { calculateRewardsPoints } from './services/points-service';\nimport Table from './components/Table';\nimport TableHeader from './components/TableHeader';\nimport CustomerTableBody from './components/CustomerTableBody';\nimport TransactionsTableBody from './components/TransactionsTableBody';\nimport ItemsTableBody from './components/ItemsTableBody';\nimport SelectedCustomerDetails from './components/SelectedCutomerDetails';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    customers: [],\n    transactions: [],\n    filteredTransactions: [],\n    transactionItems: [],\n    selectedCustomer: {},\n    customerHeaderElements: [\n      {title: 'First Name'},\n      {title: 'Last Name'},\n      {title: 'Email'}\n    ],\n    transactionsHeaderElements: [\n      {title: \"Id\"},\n      {title: \"Date\"},\n      {title: \"Total\"},\n      {title: \"Points\"},\n      {title: \"Details\"}\n    ],\n    itemsHeaderElements: [\n      {title: \"Id\"},\n      {title: \"Description\"},\n      {title: \"Quantity\"},\n      {title: \"Price\"}\n    ]\n  }\n\n  componentDidMount = () => {\n    getCustomerTransaction()\n    .then(data => this.setState({ customers: data.customers, transactions: data.transactions }))\n    .catch(err => console.log(err))\n  }\n\n  handleClickOnCustomer = (e, customerId) => {\n    e.preventDefault();\n    const selectedCustomer = this.state.customers.find(customer => customer.customerId === customerId);\n    const filteredTransactions = this.state.transactions.filter(transaction => transaction.customerId === customerId);\n    const TransactionsWithPoints = calculateRewardsPoints(filteredTransactions);\n    selectedCustomer.totalPoints = TransactionsWithPoints.totalPoints;\n    this.setState({filteredTransactions: TransactionsWithPoints, selectedCustomer, transactionItems: []});\n  }\n\n  handleShowDetails = (e, transactionId) => {\n    e.preventDefault();\n    const stateCopy = this.state.filteredTransactions.find(filteredTransaction => filteredTransaction.transactionId === transactionId);\n    const transactionItems = stateCopy.items;\n    this.setState({transactionItems});\n  }\n\n  render(){\n    const { \n      customers, \n      customerHeaderElements,\n      filteredTransactions,\n      itemsHeaderElements,\n      transactionItems,\n      transactionsHeaderElements,\n      selectedCustomer\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        <h2>Customers</h2>\n        {!customers.length ? <p>No customers to be shown</p> : \n        <Table>\n          <TableHeader headerElements={customerHeaderElements} />\n          <CustomerTableBody bodyData={customers} onCustomerClick={this.handleClickOnCustomer} />\n        </Table>}\n        {! filteredTransactions.length ? <p>Click on a customer to display its transactions.</p>: \n          <div className=\"customerDetails\">\n            <h3>Transactions Summary</h3>\n            <SelectedCustomerDetails selectedCustomer={selectedCustomer} />\n            <div className=\"transactionTableSection\">\n              <Table>\n                <TableHeader headerElements={transactionsHeaderElements} />\n                <TransactionsTableBody bodyData={filteredTransactions} onShowDetails={this.handleShowDetails} />\n              </Table> \n            </div>\n            { transactionItems.length === 0 || \n            <div className=\"itemsTableSection\">\n              <Table>\n                <TableHeader headerElements={itemsHeaderElements} />\n                <ItemsTableBody dataBody={transactionItems} />\n              </Table> \n            </div> }\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}